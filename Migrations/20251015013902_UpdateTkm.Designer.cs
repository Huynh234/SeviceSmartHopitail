// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeviceSmartHopitail.Datas;

#nullable disable

namespace SeviceSmartHopitail.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251015013902_UpdateTkm")]
    partial class UpdateTkm
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SeviceSmartHopitail.Models.HealthRecord", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<decimal?>("BloodSugar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Diastolic")
                        .HasColumnType("int");

                    b.Property<int>("HeartRate")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Systolic")
                        .HasColumnType("int");

                    b.Property<decimal?>("TimeSleep")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("RecordId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("HealthRecords");
                });

            modelBuilder.Entity("SeviceSmartHopitail.Models.IcdCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Chapter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceVolume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IcdCodes");
                });

            modelBuilder.Entity("SeviceSmartHopitail.Models.IndexTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IcdCodeId")
                        .HasColumnType("int");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IcdCodeId");

                    b.ToTable("IndexTerms");
                });

            modelBuilder.Entity("SeviceSmartHopitail.Models.PriWarning", b =>
                {
                    b.Property<int>("WarningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarningId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MaxBloodSugar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MaxDiastolic")
                        .HasColumnType("int");

                    b.Property<int?>("MaxHeartRate")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaxSleep")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MaxSystolic")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinBloodSugar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MinDiastolic")
                        .HasColumnType("int");

                    b.Property<int?>("MinHeartRate")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinSleep")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MinSystolic")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("WarningId");

                    b.HasIndex("UserProfileId")
                        .IsUnique();

                    b.ToTable("PriWarnings");
                });

            modelBuilder.Entity("SeviceSmartHopitail.Models.QuestionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TkId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("QuestionLogs");
                });

            modelBuilder.Entity("SeviceSmartHopitail.Models.TaiKhoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("OtpExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtpHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("SeviceSmartHopitail.Models.TextChunk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Embedding")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("EmbeddingCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IcdCodeId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IcdCodeId");

                    b.ToTable("TextChunks");
                });

            modelBuilder.Entity("SeviceSmartHopitail.Models.UserProfile", b =>
                {
                    b.Property<int>("HoSoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HoSoId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("Brith")
                        .HasColumnType("date");

                    b.Property<bool>("Check")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TaiKhoanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("HoSoId");

                    b.HasIndex("TaiKhoanId")
                        .IsUnique();

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("SeviceSmartHopitail.Models.HealthRecord", b =>
                {
                    b.HasOne("SeviceSmartHopitail.Models.UserProfile", "UserProfile")
                        .WithMany("HealthRecords")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("SeviceSmartHopitail.Models.IndexTerm", b =>
                {
                    b.HasOne("SeviceSmartHopitail.Models.IcdCode", "IcdCode")
                        .WithMany("IndexTerms")
                        .HasForeignKey("IcdCodeId");

                    b.Navigation("IcdCode");
                });

            modelBuilder.Entity("SeviceSmartHopitail.Models.PriWarning", b =>
                {
                    b.HasOne("SeviceSmartHopitail.Models.UserProfile", "UserProfile")
                        .WithOne("PriWarning")
                        .HasForeignKey("SeviceSmartHopitail.Models.PriWarning", "UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("SeviceSmartHopitail.Models.TextChunk", b =>
                {
                    b.HasOne("SeviceSmartHopitail.Models.IcdCode", "IcdCode")
                        .WithMany("TextChunks")
                        .HasForeignKey("IcdCodeId");

                    b.Navigation("IcdCode");
                });

            modelBuilder.Entity("SeviceSmartHopitail.Models.UserProfile", b =>
                {
                    b.HasOne("SeviceSmartHopitail.Models.TaiKhoan", "TaiKhoan")
                        .WithOne("UserProfile")
                        .HasForeignKey("SeviceSmartHopitail.Models.UserProfile", "TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("SeviceSmartHopitail.Models.IcdCode", b =>
                {
                    b.Navigation("IndexTerms");

                    b.Navigation("TextChunks");
                });

            modelBuilder.Entity("SeviceSmartHopitail.Models.TaiKhoan", b =>
                {
                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("SeviceSmartHopitail.Models.UserProfile", b =>
                {
                    b.Navigation("HealthRecords");

                    b.Navigation("PriWarning");
                });
#pragma warning restore 612, 618
        }
    }
}
